- path: ${NODE_SCRIPTS_PATH}/updateTopologyIP.sh
  permissions: "550"
  content: |
    #!/bin/bash

    addOrRemove="$1"
    ip="$2"
    doRestart=""

    while :; do
      case $1 in
        --restart)
          doRestart="yes"
        ;;
        *)
      break
      esac
      shift
    done

    if [ -z $addOrRemove ]; then 
      echo "add or remove IP from topology?"
      read addOrRemove
    fi 

    if [ -z "$ip" ]; then 
      echo "Enter IP to $addOrRemove"
      read ip
    fi 

    if [[ ! $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "Invalid IP"
      return
    fi 


    # Adding a block IP
    if [ $addOrRemove == "add" ]; then

    if [[ $(cat ${CONFIG_TOPOLOGY} | jq '.Producers | map(select(.addr == "'${ip}'"))  | length' ) -gt 0 ]]; then
    echo "IP ${ip} already exists! Topology not modified."
    else
    sudo ufw allow from "$ip" to any port "${NODE_PORT}"
    addedResult=$(cat ${CONFIG_TOPOLOGY} | jq '.Producers += [{"addr": "'${ip}'", "port": ${NODE_PORT}, "valency": 1}]')
    cat > ${CONFIG_TOPOLOGY} << EOF 
    $addedResult
    EOF
    fi
    return
    fi

    # Removing a block IP
    if [ $addOrRemove == "remove" ]; then

    if [[ $(cat ${CONFIG_TOPOLOGY} | jq '.Producers | map(select(.addr == "'${ip}'"))  | length' ) -gt 0 ]]; then
    sudo ufw delete from "$ip" to any port "${NODE_PORT}"
    removedResult=$(cat ${CONFIG_TOPOLOGY} |  jq '.Producers | map(select(.addr != "'${ip}'"))')
    cat > ${CONFIG_TOPOLOGY} << EOF 
    {
        "Producers": $removedResult
    }
    EOF
    else
    echo "IP ${ip} does not exist! Topology not modified."
    fi
    return
    fi

    if [ -z $doRestart ]; then 
      echo "Restart required. Do it now? y/n"
      read restartNow
      if [ $restartNow == "y" ]; then 
        doRestart="yes"
      fi 
    fi
    if [ $doRestart == "yes" ]; then 
      sudo systemctl restart cardano-node
    fi
