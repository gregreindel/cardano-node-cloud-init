- path: ${NODE_SCRIPTS_PATH}/updateTopologyIP.sh
  permissions: "550"
  content: |
    #!/bin/bash

    # Used to generate topology for block or relay depending on IP's in ${NODE_HOME}/.config.json

    [[ "${NODE_NETWORK}" = "mainnet" ]] && DEFAULT_IOHK_RELAY="relays-new.cardano-mainnet.iohk.io" || DEFAULT_IOHK_RELAY="relays-new.cardano-testnet.iohkdev.io"

    function resetTopology(){
    cat > ${CONFIG_TOPOLOGY} << EOF 
    {
      "Producers": [
          {
              "addr": "$DEFAULT_IOHK_RELAY",
              "port": 3001,
              "valency": 2
          }
      ]
    }
    EOF
    }

    function addToTopology(){
    if [[ $(cat ${CONFIG_TOPOLOGY} | jq '.Producers | map(select(.addr == "'$1'"))  | length' ) -gt 0 ]]; then
    echo "IP $1 already exists! Topology not modified."
    else
    sudo ufw allow from "$1" to any port "${NODE_PORT}"
    addedResult=$(cat ${CONFIG_TOPOLOGY} | jq '.Producers += [{"addr": "'$1'", "port": ${NODE_PORT}, "valency": 1}]')
    cat > ${CONFIG_TOPOLOGY} << EOF 
    $addedResult
    EOF
    fi
    }

    function removeFromTopology(){
    if [[ $(cat ${CONFIG_TOPOLOGY} | jq '.Producers | map(select(.addr == "'$1'"))  | length' ) -gt 0 ]]; then

    if [ ! $DEFAULT_IOHK_RELAY == $1 ]; then 
      sudo ufw delete from "$1" to any port "${NODE_PORT}"
    fi 
    
    removedResult=$(cat ${CONFIG_TOPOLOGY} |  jq '.Producers | map(select(.addr != "'$1'"))')
    cat > ${CONFIG_TOPOLOGY} << EOF 
    {
        "Producers": $removedResult
    }
    EOF
    else
    echo "IP $1 does not exist! Topology not modified."
    fi
    }

    # Reset topology to use default relay
    resetTopology

    [[ "${NODE_TYPE}" = "block" ]] && ITEMS=$(cat ${NODE_HOME}/.config.json  | jq -r '.relayIPs[]') || ITEMS=$(cat ${NODE_HOME}/.config.json  | jq -r '.blockIP')

    for IP in $(echo $ITEMS); do
    if [ ! -z $IP ]; then 
      addToTopology $IP
    fi
    done

    if [ "${NODE_TYPE}" = "block" ]; then 
    removeFromTopology $DEFAULT_IOHK_RELAY
    fi