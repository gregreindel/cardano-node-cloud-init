- path: ${NODE_SCRIPTS_PATH}/init/create.sh
  permissions: "550"
  content: |
    #!/bin/bash

    if [[ $(du --apparent-size -B 1 ${NODE_DB_PATH}/immutable/ | cut -f1) -lt 3796516778 ]]; then
        echo "You need to sync the database before setting up the node. Make sure your db is updated and the node is synced."
        echo "If this is the first time starting your node, then this will take some time."
        return
    fi

    KES_PERIOD_START=$(. ${NODE_SCRIPTS_PATH}/getTxInfo.sh | jq -r '.kesPeriodStart'")

    # Make sure node is running
    if [ -z $KES_PERIOD_START ]; then
      message="Missing KES_PERIOD_START. Is the node updated and running?"
      echo "$(tput setaf 1)$message$(tput sgr0)"
      return
    fi

    if [ ! -f ${NODE_PRIVATE_PATH}/node.cert ] ||
      [ ! -f ${NODE_PRIVATE_PATH}/deleg.cert ] ||
      [ ! -f ${NODE_PRIVATE_PATH}/payment.addr ] ||  
      [ ! -f ${NODE_PRIVATE_PATH}/kes.skey ]; then
      . ${NODE_SCRIPTS_PATH}/init/registerKeys.sh
    fi

    if [ ! -f ${NODE_PRIVATE_PATH}/stake.addr ]; then 
      . ${NODE_SCRIPTS_PATH}/init/registerAddress.sh
      if [ ! -f ${NODE_PRIVATE_PATH}/stake.addr ]; then 
        return
      fi 
    fi 

    if [ ! -f ${NODE_HOME}/poolMetaData.json ]; then
      . ${NODE_SCRIPTS_PATH}/utils/generatePoolMeta.sh
      . ${NODE_SCRIPTS_PATH}/utils/verifyPoolMeta.sh
    fi

    if [ ! -f ${NODE_HOME}/.poolMetaUrl.txt ]; then 
      echo "Need to verify pool meta. Run cni-init to continue with setup."
      return
    fi


    if [ ! -f /home/${NODE_USER}/pool.cert ]; then
      . ${NODE_SCRIPTS_PATH}/utils/generatePoolCertificate.sh
      if [ ! -f /home/${NODE_USER}/pool.cert ]; then
        return
      fi
    fi


    if [ ! -f ${NODE_PRIVATE_PATH}/pool.cert ]; then
      . ${NODE_SCRIPTS_PATH}/utils/generatePoolCertificateTransaction.sh --includeDeposit
      if [ ! -f ${NODE_PRIVATE_PATH}/pool.cert ]; then
        return
      fi 
    fi

    if [ ! -f ${NODE_PRIVATE_PATH}/pid.txt ]; then
      . ${NODE_SCRIPTS_PATH}/init/registerPoolGetId.sh
    fi

    . ${NODE_SCRIPTS_PATH}/init/registerTopology.sh
    
    echo "Setup Complete. Restarting Node."
    sudo systemctl restart cardano-node